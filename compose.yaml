
services:
  app_migrations:
    restart: 'no'
    image: ${MIGRATIONS_APP:-migrations}:${VERSION:-latest}
    command: bun run db:migrate
    volumes:
      - sqlite_db:/app/${SQLITE_FILEPATH}
    environment:
      - DATABASE_URL="sqlite3:${SQLITE_FILEPATH}"
      - DBMATE_MIGRATIONS_DIR=./database/migrations
      - DBMATE_NO_DUMP_SCHEMA=true
  app:
    restart: unless-stopped
    image: ${APP_IMAGE}:${VERSION:-latest}
    volumes:
      - sqlite_db:/app/${SQLITE_FILEPATH}
    expose:
      - ${PORT}
    networks:
      - gateway_proxy
    environment:
      - PORT=${PORT}
      - ENV=production
      - SQLITE_FILEPATH=${SQLITE_FILEPATH}
      - TMDB_ACCESS_TOKEN=${TMDB_ACCESS_TOKEN}
    depends_on:
      app_migrations:
        condition: service_completed_successfully
    labels:
      - traefik.enable=true
      - traefik.docker.network=gateway_proxy
      - traefik.http.routers.reel-tracker.rule=HOST(`${APP_HOST?}`)
      - traefik.http.routers.reel-tracker.tls=true
      - traefik.http.routers.reel-tracker.entrypoints=secure-web
      - traefik.http.middlewares.reel-tracker.basicauth.users=amini:$2y$05$ew47e5SsXaithchwUxuhjOSt2755N9UGWzeaVIVV4UQEE3ulh3L2q
      - traefik.http.middlewares.reel-tracker.basicauth.removeheader=true
      - traefik.http.routers.reel-tracker.middlewares=reel-tracker
volumes:
  sqlite_db:

networks:
  gateway_proxy:
    external: true